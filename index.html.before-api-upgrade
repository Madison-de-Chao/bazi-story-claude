<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>虹靈御所八字軍團系統</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Microsoft JhengHei', sans-serif;
            background: linear-gradient(135deg, #1a1a2e, #16213e, #0f3460, #1a1a2e);
            background-size: 400% 400%;
            animation: gradientFlow 15s ease infinite;
            color: white;
            min-height: 100vh;
            overflow-x: hidden;
        }

        @keyframes gradientFlow {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        /* 增強星空背景動畫 */
        .stars {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
        }

        .star {
            position: absolute;
            background: white;
            border-radius: 50%;
            animation: twinkle 3s infinite, float 6s ease-in-out infinite;
        }

        .star.small {
            width: 2px;
            height: 2px;
        }

        .star.medium {
            width: 3px;
            height: 3px;
            box-shadow: 0 0 4px rgba(255, 255, 255, 0.8);
        }

        .star.large {
            width: 4px;
            height: 4px;
            box-shadow: 0 0 8px rgba(255, 255, 255, 0.9);
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0.3; }
            50% { opacity: 1; }
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        .container {
            position: relative;
            z-index: 1;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            padding: 20px 0;
        }

        .title {
            font-size: 3rem;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #ffd700, #ff6b6b);
            background-size: 200% auto;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 10px;
            text-shadow: 0 0 30px rgba(255, 255, 255, 0.3);
            animation: rainbowFlow 5s linear infinite, glow 2s ease-in-out infinite;
        }

        @keyframes rainbowFlow {
            0% { background-position: 0% center; }
            100% { background-position: 200% center; }
        }

        @keyframes glow {
            0%, 100% { filter: drop-shadow(0 0 10px rgba(78, 205, 196, 0.5)); }
            50% { filter: drop-shadow(0 0 20px rgba(255, 215, 0, 0.8)); }
        }

        .subtitle {
            font-size: 1.3rem;
            opacity: 0.9;
            margin-bottom: 10px;
            animation: pulse 3s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 0.8; }
            50% { opacity: 1; }
        }

        .version {
            font-size: 1rem;
            opacity: 0.7;
            color: #4ecdc4;
        }

        /* 表單樣式增強 */
        .form-section {
            background: rgba(255, 255, 255, 0.15);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            backdrop-filter: blur(20px);
            border: 1px solid rgba(78, 205, 196, 0.3);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }

        .form-section:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 40px rgba(78, 205, 196, 0.2);
        }

        .form-title {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: #4ecdc4;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-label {
            font-size: 1rem;
            margin-bottom: 8px;
            color: #ffd700;
            font-weight: 500;
        }

        .form-input, .form-select {
            padding: 12px 15px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #4ecdc4;
            box-shadow: 0 0 20px rgba(78, 205, 196, 0.5);
            transform: translateY(-2px);
        }

        .form-input::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .gender-options {
            display: flex;
            gap: 15px;
        }

        .gender-option {
            flex: 1;
            padding: 12px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            cursor: pointer;
            text-align: center;
            transition: all 0.3s ease;
        }

        .gender-option:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(78, 205, 196, 0.3);
        }

        .gender-option.selected {
            border-color: #4ecdc4;
            background: rgba(78, 205, 196, 0.3);
            box-shadow: 0 0 15px rgba(78, 205, 196, 0.5);
        }

        .midnight-options {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .midnight-option {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 15px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .midnight-option:hover {
            transform: translateX(5px);
            box-shadow: 0 4px 12px rgba(78, 205, 196, 0.3);
        }

        .midnight-option.selected {
            border-color: #4ecdc4;
            background: rgba(78, 205, 196, 0.3);
            box-shadow: 0 0 15px rgba(78, 205, 196, 0.5);
        }

        .midnight-option input[type="radio"] {
            margin: 0;
        }

        .midnight-description {
            font-size: 0.9rem;
            opacity: 0.8;
            margin-top: 5px;
        }

        .submit-button {
            width: 100%;
            padding: 18px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1);
            background-size: 200% auto;
            border: none;
            border-radius: 15px;
            color: white;
            font-size: 1.2rem;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 20px;
            position: relative;
            overflow: hidden;
            animation: buttonPulse 2s ease-in-out infinite;
        }

        .submit-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: left 0.5s;
        }

        .submit-button:hover::before {
            left: 100%;
        }

        .submit-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(255, 107, 107, 0.5);
            background-position: right center;
        }

        @keyframes buttonPulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.02); }
        }

        .submit-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
            animation: none;
        }

        /* 載入動畫增強 */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.95));
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .loading-content {
            text-align: center;
            color: white;
        }

        .loading-spinner {
            width: 80px;
            height: 80px;
            border: 4px solid transparent;
            border-top: 4px solid #4ecdc4;
            border-right: 4px solid #ff6b6b;
            border-bottom: 4px solid #ffd700;
            border-left: 4px solid #45b7d1;
            border-radius: 50%;
            animation: spin 1s linear infinite, pulse 2s ease-in-out infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg) scale(1); }
            50% { transform: rotate(180deg) scale(1.1); }
            100% { transform: rotate(360deg) scale(1); }
        }

        .loading-text {
            font-size: 1.5rem;
            margin-bottom: 10px;
            animation: glow 2s ease-in-out infinite;
        }

        .loading-subtext {
            font-size: 1rem;
            opacity: 0.8;
        }

        /* 結果展示 */
        .result-section {
            display: none;
            margin-top: 30px;
        }

        .result-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .result-title {
            font-size: 2rem;
            color: #ffd700;
            margin-bottom: 10px;
            animation: glow 2s ease-in-out infinite;
        }

        .result-subtitle {
            font-size: 1.1rem;
            opacity: 0.8;
        }

        /* 標籤頁系統增強 */
        .tabs-container {
            margin-bottom: 30px;
        }

        .tabs-nav {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .tab-button {
            padding: 12px 20px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 25px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            position: relative;
            overflow: hidden;
        }

        .tab-button::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(78, 205, 196, 0.3);
            transform: translate(-50%, -50%);
            transition: width 0.3s, height 0.3s;
        }

        .tab-button:hover::before {
            width: 100%;
            height: 100%;
        }

        .tab-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(78, 205, 196, 0.3);
        }

        .tab-button.active {
            background: rgba(78, 205, 196, 0.3);
            border-color: #4ecdc4;
            color: #4ecdc4;
            box-shadow: 0 0 15px rgba(78, 205, 196, 0.5);
        }

        .tab-content {
            display: none;
            animation: fadeIn 0.5s ease-in;
        }

        .tab-content.active {
            display: block;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* 傳統命盤增強 */
        .traditional-chart {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 20px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(78, 205, 196, 0.2);
        }

        .chart-title {
            text-align: center;
            font-size: 1.5rem;
            color: #ffd700;
            margin-bottom: 20px;
        }

        .pillars-display {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .pillar-column {
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 15px;
            transition: all 0.3s ease;
            animation: slideInUp 0.5s ease-out;
            animation-fill-mode: both;
        }

        .pillar-column:nth-child(1) { animation-delay: 0.1s; }
        .pillar-column:nth-child(2) { animation-delay: 0.2s; }
        .pillar-column:nth-child(3) { animation-delay: 0.3s; }
        .pillar-column:nth-child(4) { animation-delay: 0.4s; }

        @keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .pillar-column:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(78, 205, 196, 0.3);
            border: 1px solid rgba(78, 205, 196, 0.5);
        }

        .pillar-header {
            font-size: 1rem;
            color: #4ecdc4;
            margin-bottom: 10px;
        }

        .pillar-stem {
            font-size: 2rem;
            font-weight: bold;
            color: #ffd700;
            margin-bottom: 5px;
            animation: glow 3s ease-in-out infinite;
        }

        .pillar-branch {
            font-size: 2rem;
            font-weight: bold;
            color: #ff6b6b;
            animation: glow 3s ease-in-out infinite 0.5s;
        }

        .pillar-nayin {
            font-size: 0.9rem;
            color: #45b7d1;
            margin-top: 10px;
            opacity: 0.9;
        }

        .pillar-shishen {
            font-size: 0.9rem;
            color: #4ecdc4;
            margin-top: 5px;
            opacity: 0.9;
        }

        .elements-display {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 15px;
            margin-top: 20px;
        }

        .element-item {
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 15px 10px;
            transition: all 0.3s ease;
            animation: slideInUp 0.5s ease-out;
            animation-fill-mode: both;
        }

        .element-item:nth-child(1) { animation-delay: 0.5s; }
        .element-item:nth-child(2) { animation-delay: 0.6s; }
        .element-item:nth-child(3) { animation-delay: 0.7s; }
        .element-item:nth-child(4) { animation-delay: 0.8s; }
        .element-item:nth-child(5) { animation-delay: 0.9s; }

        .element-item:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 12px rgba(255, 215, 0, 0.3);
        }

        .element-name {
            font-size: 1.1rem;
            font-weight: bold;
            color: #ffd700;
            margin-bottom: 5px;
        }

        .element-count {
            font-size: 1.5rem;
            color: #4ecdc4;
            animation: pulse 2s ease-in-out infinite;
        }

        /* 軍團卡片增強 - 保留原有結構 */
        .legions-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .legion-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 20px;
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
            animation: slideInUp 0.6s ease-out;
            animation-fill-mode: both;
        }

        .legion-card:nth-child(1) { 
            animation-delay: 0.2s;
            border-color: rgba(255, 215, 0, 0.5);
            box-shadow: 0 0 20px rgba(255, 215, 0, 0.2);
        }
        .legion-card:nth-child(2) { 
            animation-delay: 0.4s;
            border-color: rgba(76, 175, 80, 0.5);
            box-shadow: 0 0 20px rgba(76, 175, 80, 0.2);
        }
        .legion-card:nth-child(3) { 
            animation-delay: 0.6s;
            border-color: rgba(33, 150, 243, 0.5);
            box-shadow: 0 0 20px rgba(33, 150, 243, 0.2);
        }
        .legion-card:nth-child(4) { 
            animation-delay: 0.8s;
            border-color: rgba(244, 67, 54, 0.5);
            box-shadow: 0 0 20px rgba(244, 67, 54, 0.2);
        }

        .legion-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(78, 205, 196, 0.3);
        }

        .legion-header {
            text-align: center;
            margin-bottom: 15px;
        }

        .legion-icon {
            font-size: 2rem;
            margin-bottom: 10px;
        }

        .legion-name {
            font-size: 1.3rem;
            font-weight: bold;
            color: #ffd700;
            margin-bottom: 5px;
        }

        .legion-description {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .legion-characters {
            margin: 15px 0;
            padding: 15px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
        }

        .character-role {
            margin-bottom: 10px;
        }

        .role-label {
            font-size: 0.9rem;
            color: #4ecdc4;
            margin-bottom: 5px;
        }

        .role-name {
            font-size: 1.1rem;
            font-weight: bold;
            color: white;
        }

        .role-class {
            font-size: 0.9rem;
            color: #45b7d1;
            font-style: italic;
        }

        .legion-battlefield {
            text-align: center;
            padding: 10px;
            background: rgba(255, 107, 107, 0.2);
            border-radius: 8px;
            margin-bottom: 15px;
        }

        .battlefield-label {
            font-size: 0.8rem;
            color: #ff6b6b;
            margin-bottom: 5px;
        }

        .battlefield-name {
            font-size: 1.1rem;
            font-weight: bold;
            color: #ffd700;
        }

        .legion-advantages {
            margin-bottom: 15px;
        }

        .advantages-title {
            font-size: 0.9rem;
            color: #4ecdc4;
            margin-bottom: 8px;
        }

        .advantages-list {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }

        .advantage-tag {
            padding: 5px 10px;
            background: rgba(76, 175, 80, 0.3);
            border-radius: 15px;
            font-size: 0.85rem;
            color: #4caf50;
            border: 1px solid rgba(76, 175, 80, 0.5);
        }

        .legion-talismans {
            margin-top: 15px;
        }

        .talismans-title {
            font-size: 0.9rem;
            color: #ffd700;
            margin-bottom: 8px;
        }

        .talismans-list {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }

        .talisman-tag {
            padding: 5px 10px;
            background: rgba(255, 215, 0, 0.2);
            border-radius: 15px;
            font-size: 0.85rem;
            color: #ffd700;
            border: 1px solid rgba(255, 215, 0, 0.5);
            animation: float 3s ease-in-out infinite;
            transition: all 0.3s ease;
        }

        .talisman-tag:hover {
            transform: translateY(-3px) scale(1.1);
            box-shadow: 0 4px 12px rgba(255, 215, 0, 0.5);
        }

        /* 日誌系統增強 */
        .log-container {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 20px;
            backdrop-filter: blur(10px);
            max-height: 500px;
            overflow-y: auto;
        }

        .log-item {
            padding: 12px;
            margin-bottom: 10px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 8px;
            border-left: 3px solid #4ecdc4;
            transition: all 0.3s ease;
            animation: slideInLeft 0.5s ease-out;
            animation-fill-mode: both;
        }

        .log-item:nth-child(1) { animation-delay: 0.1s; }
        .log-item:nth-child(2) { animation-delay: 0.2s; }
        .log-item:nth-child(3) { animation-delay: 0.3s; }

        @keyframes slideInLeft {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .log-item:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateX(5px);
        }

        .log-item.info {
            border-left-color: #45b7d1;
        }

        .log-item.warning {
            border-left-color: #ffd700;
        }

        .log-label {
            font-size: 0.85rem;
            color: #4ecdc4;
            margin-bottom: 5px;
        }

        .log-value {
            font-size: 0.95rem;
            color: white;
        }

        /* AI故事區域 */
        .story-container {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 30px;
            backdrop-filter: blur(10px);
            line-height: 1.8;
        }

        .story-container p {
            margin-bottom: 15px;
        }

        .story-container strong {
            color: #ffd700;
        }

        /* 重置按鈕 */
        .reset-button {
            width: 100%;
            padding: 15px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 15px;
            color: white;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 20px;
        }

        .reset-button:hover {
            background: rgba(255, 107, 107, 0.3);
            border-color: #ff6b6b;
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(255, 107, 107, 0.3);
        }

        /* 響應式設計 */
        @media (max-width: 768px) {
            .title {
                font-size: 2rem;
            }

            .pillars-display {
                grid-template-columns: repeat(2, 1fr);
            }

            .elements-display {
                grid-template-columns: repeat(2, 1fr);
            }

            .legions-container {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- 開場動畫 -->
    <div id="introOverlay" class="intro-overlay">
        <video id="introVideo" class="intro-video" autoplay muted playsinline>
            <source src="intro.mp4" type="video/mp4">
        </video>
        <button id="skipIntro" class="skip-intro-btn">跳過 ⏭</button>
    </div>

    <style>
        /* 開場動畫樣式 */
        .intro-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: #000;
            z-index: 9999;
            display: flex;
            justify-content: center;
            align-items: center;
            opacity: 1;
            transition: opacity 0.5s ease;
        }

        .intro-overlay.fade-out {
            opacity: 0;
            pointer-events: none;
        }

        .intro-video {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        .skip-intro-btn {
            position: absolute;
            bottom: 30px;
            right: 30px;
            padding: 12px 24px;
            background: rgba(255, 255, 255, 0.2);
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 25px;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
            z-index: 10000;
        }

        .skip-intro-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(255, 255, 255, 0.3);
        }

        /* 隱藏主內容直到動畫結束 */
        body.intro-playing .container {
            opacity: 0;
        }

        body.intro-finished .container {
            opacity: 1;
            animation: fadeInContent 0.8s ease;
        }

        @keyframes fadeInContent {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>

    <script>
        // 開場動畫控制
        (function() {
            const introOverlay = document.getElementById('introOverlay');
            const introVideo = document.getElementById('introVideo');
            const skipBtn = document.getElementById('skipIntro');
            
            // 標記正在播放
            document.body.classList.add('intro-playing');
            
            // 影片結束後自動關閉
            introVideo.addEventListener('ended', function() {
                endIntro();
            });
            
            // 跳過按鈕
            skipBtn.addEventListener('click', function() {
                endIntro();
            });
            
            // 結束開場動畫
            function endIntro() {
                introOverlay.classList.add('fade-out');
                document.body.classList.remove('intro-playing');
                document.body.classList.add('intro-finished');
                
                setTimeout(function() {
                    introOverlay.style.display = 'none';
                }, 500);
            }
            
            // 如果影片載入失敗,自動跳過
            introVideo.addEventListener('error', function() {
                console.error('開場影片載入失敗');
                endIntro();
            });
        })();
    </script>

    <!-- 星空背景 -->
    <div class="stars" id="stars"></div>

    <!-- 載入覆蓋層 -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="loading-spinner"></div>
            <div class="loading-text">星雲能量聚合中...</div>
            <div class="loading-subtext">正在計算您的四柱八字，分析四時軍團，生成神煞兵符...</div>
        </div>
    </div>

    <div class="container">
        <!-- 標題區域 -->
        <div class="header">
            <h1 class="title">虹靈御所</h1>
            <p class="subtitle">八字人生兵法系統</p>
            <p class="version">v8.1 · 精準節氣 · 查表計算 · 可追溯日誌</p>
        </div>

        <!-- 表單區域 -->
        <div class="form-section" id="formSection">
            <h2 class="form-title">⚔️ 軍團召喚儀式</h2>
            <p style="margin-bottom: 20px; opacity: 0.8;">請提供您的基本資訊，啟動四時軍團分析</p>

            <form id="baziForm">
                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label">姓名</label>
                        <input type="text" class="form-input" id="name" placeholder="請輸入您的姓名" required>
                    </div>

                    <div class="form-group">
                        <label class="form-label">性別</label>
                        <div class="gender-options">
                            <div class="gender-option" data-value="男">男</div>
                            <div class="gender-option" data-value="女">女</div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">出生日期</label>
                        <input type="date" class="form-input" id="birthDate" required>
                    </div>

                    <div class="form-group">
                        <label class="form-label">出生時間</label>
                        <input type="time" class="form-input" id="birthTime" required>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">子時換日策略</label>
                    <p style="font-size: 0.9rem; opacity: 0.7; margin-bottom: 10px;">
                        子時 (23:00-00:59) 橫跨兩個曆日，需選擇計算方式
                    </p>
                    <div class="midnight-options">
                        <div class="midnight-option selected" data-value="traditional">
                            <input type="radio" name="midnightRule" value="traditional" checked>
                            <div>
                                <div>傳統派換日</div>
                                <div class="midnight-description">23:00開始即為新日 (無子夜之分)</div>
                            </div>
                        </div>
                        <div class="midnight-option" data-value="modern">
                            <input type="radio" name="midnightRule" value="modern">
                            <div>
                                <div>現代派區分</div>
                                <div class="midnight-description">晚子23:00-23:59當日，早子00:00-00:59翌日</div>
                            </div>
                        </div>
                    </div>
                </div>

                <button type="submit" class="submit-button">
                    ⚡ 開始命運分析
                </button>
            </form>
        </div>

        <!-- 結果區域 -->
        <div class="result-section" id="resultSection">
            <div class="result-header">
                <h2 class="result-title">🏰 命運分析完成</h2>
                <p class="result-subtitle" id="resultSubtitle"></p>
            </div>
            
            <!-- 標籤頁導航 -->
            <div class="tabs-container">
                <div class="tabs-nav">
                    <button class="tab-button active" onclick="switchTab('traditional')">📊 傳統命盤</button>
                    <button class="tab-button" onclick="switchTab('legions')">⚔️ 軍團戰報</button>
                    <button class="tab-button" onclick="switchTab('story')">📖 AI軍團故事</button>
                    <button class="tab-button" onclick="switchTab('logs')">📋 計算日誌</button>
                </div>

                <!-- 傳統命盤標籤 -->
                <div class="tab-content active" id="traditionalTab">
                    <div class="traditional-chart">
                        <h3 class="chart-title">八字命盤</h3>
                        <div class="pillars-display" id="pillarsDisplay">
                            <!-- 四柱顯示 -->
                        </div>
                        <div class="elements-stats" id="elementsStats">
                            <!-- 五行統計 -->
                        </div>
                        <div id="yinYangBalance">
                            <!-- 陰陽平衡度 -->
                        </div>
                    </div>
                </div>

                <!-- 軍團戰報標籤 -->
                <div class="tab-content" id="legionsTab">
                    <div class="legions-grid" id="legionsGrid">
                        <!-- 軍團卡片將在這裡動態生成 -->
                    </div>
                </div>

                <!-- AI軍團故事標籤 -->
                <div class="tab-content" id="storyTab">
                    <div class="story-container">
                        <h3 class="story-title">🌟 您的軍團傳奇</h3>
                        <div id="storyContent">
                            <div class="story-loading">
                                <div class="story-spinner"></div>
                                <div>AI正在為您編織獨特的軍團故事...</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- 計算日誌標籤 -->
                <div class="tab-content" id="logsTab">
                    <div class="logs-container" id="logsContainer">
                        <!-- 日誌內容將在這裡動態生成 -->
                    </div>
                </div>
            </div>

            <div style="text-align: center;">
                <button class="reset-button" onclick="resetForm()">重新分析</button>
            </div>
        </div>
    </div>

    <script>
        // 故事版軍團轉換器
        const HEAVENLY_STEMS_COMMANDERS = {
            '甲': { name: '森林統帥', rpg_class: '先鋒者', buff: ['開拓進取', '勇往直前'], debuff: ['急躁冒進', '缺乏耐性'] },
            '乙': { name: '花草軍師', rpg_class: '協調者', buff: ['靈活應變', '溫和包容'], debuff: ['優柔寡斷', '過度依賴'] },
            '丙': { name: '烈日戰神', rpg_class: '激勵者', buff: ['熱情感召', '光明正大'], debuff: ['急躁易怒', '過度張揚'] },
            '丁': { name: '燭光法師', rpg_class: '智慧者', buff: ['細膩洞察', '溫暖人心'], debuff: ['過度敏感', '情緒波動'] },
            '戊': { name: '山岳守護', rpg_class: '防禦者', buff: ['穩定承擔', '厚德載物'], debuff: ['固執僵化', '變通不足'] },
            '己': { name: '田園管家', rpg_class: '支援者', buff: ['細心照料', '默默奉獻'], debuff: ['過度操心', '自我懷疑'] },
            '庚': { name: '鋼鐵騎士', rpg_class: '執行者', buff: ['果斷決策', '堅毅不屈'], debuff: ['剛硬無情', '缺乏彈性'] },
            '辛': { name: '珠寶工匠', rpg_class: '精煉者', buff: ['精緻品味', '追求完美'], debuff: ['挑剔完美', '過度敏感'] },
            '壬': { name: '江河船長', rpg_class: '流動顧問', buff: ['靈活創新', '包容萬物'], debuff: ['善變無定', '缺乏原則'] },
            '癸': { name: '甘露使者', rpg_class: '滋養者', buff: ['溫柔包容', '潤物無聲'], debuff: ['過度依賴', '缺乏主見'] }
        };

        const EARTHLY_BRANCHES_STRATEGISTS = {
            '子': { name: '智慧鼠師', buff: ['機敏謀略', '靈活變通'], debuff: ['過度算計', '缺乏信任'] },
            '丑': { name: '忠犬守衛', buff: ['後勤補給', '忠誠可靠'], debuff: ['遲疑不決', '過度保守'] },
            '寅': { name: '森林獵人', buff: ['先鋒衝陣', '勇猛無畏'], debuff: ['草率行事', '缺乏深思'] },
            '卯': { name: '春兔信使', buff: ['靈活傳訊', '生機勃勃'], debuff: ['缺乏耐性', '三分鐘熱度'] },
            '辰': { name: '龍族長老', buff: ['威嚴統御', '高瞻遠矚'], debuff: ['高傲孤立', '脫離實際'] },
            '巳': { name: '智蛇謀士', buff: ['深謀遠慮', '洞察人心'], debuff: ['過度猜疑', '心機太重'] },
            '午': { name: '烈馬先鋒', buff: ['衝鋒陷陣', '熱情奔放'], debuff: ['衝動魯莽', '缺乏持久'] },
            '未': { name: '溫羊牧者', buff: ['和諧協調', '溫和善良'], debuff: ['優柔寡斷', '缺乏決斷'] },
            '申': { name: '靈猴軍師', buff: ['機智變通', '創意無限'], debuff: ['三心二意', '不夠專注'] },
            '酉': { name: '金雞報曉', buff: ['準時執行', '一絲不苟'], debuff: ['過度挑剔', '缺乏包容'] },
            '戌': { name: '戰犬統領', buff: ['守護堡壘', '忠誠護主'], debuff: ['迂腐頑固', '缺乏變通'] },
            '亥': { name: '野豬勇士', buff: ['勇猛直前', '純真善良'], debuff: ['缺乏策略', '容易受騙'] }
        };

        const LEGION_TYPES = {
            year: { name: '家族兵團', description: '血脈傳承，根基所在', cssClass: 'family', icon: '🏰' },
            month: { name: '成長兵團', description: '學習歷程，能力養成', cssClass: 'growth', icon: '🌱' },
            day: { name: '本我兵團', description: '核心自我，真實本性', cssClass: 'self', icon: '⭐' },
            hour: { name: '未來兵團', description: '發展方向，潛能展現', cssClass: 'future', icon: '🚀' }
        };

        // 初始化星空背景
        function createStars() {
            const starsContainer = document.getElementById('stars');
            const starCount = 100;
            
            for (let i = 0; i < starCount; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.animationDelay = Math.random() * 3 + 's';
                starsContainer.appendChild(star);
            }
        }

        // 表單事件處理
        document.addEventListener('DOMContentLoaded', function() {
            createStars();
            
            // 性別選擇
            document.querySelectorAll('.gender-option').forEach(option => {
                option.addEventListener('click', function() {
                    document.querySelectorAll('.gender-option').forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                });
            });

            // 子時換日策略選擇
            document.querySelectorAll('.midnight-option').forEach(option => {
                option.addEventListener('click', function() {
                    document.querySelectorAll('.midnight-option').forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                    this.querySelector('input[type="radio"]').checked = true;
                });
            });

            // 表單提交
            document.getElementById('baziForm').addEventListener('submit', handleFormSubmit);
        });

        async function handleFormSubmit(event) {
            event.preventDefault();
            
            const formData = collectFormData();
            if (!validateFormData(formData)) {
                return;
            }

            showLoading();
            
            try {
                const apiResult = await callBaziApi(formData);
                const storyResult = convertToStoryLegions(apiResult);
                displayResults(formData.name, storyResult, apiResult);
            } catch (error) {
                hideLoading();
                alert('分析失敗：' + error.message);
            }
        }

        function collectFormData() {
            const selectedGender = document.querySelector('.gender-option.selected');
            const selectedMidnight = document.querySelector('.midnight-option.selected input[type="radio"]');
            
            return {
                name: document.getElementById('name').value,
                gender: selectedGender ? selectedGender.dataset.value : '',
                birthDate: document.getElementById('birthDate').value,
                birthTime: document.getElementById('birthTime').value,
                midnightRule: selectedMidnight ? selectedMidnight.value : 'traditional'
            };
        }

        function validateFormData(data) {
            if (!data.name || !data.gender || !data.birthDate || !data.birthTime) {
                alert('請填寫所有必要資訊');
                return false;
            }
            return true;
        }

        async function callBaziApi(formData) {
            const requestData = {
                datetime_local: `${formData.birthDate}T${formData.birthTime}:00`,
                timezone: "Asia/Taipei",
                longitude: 120.0,
                use_true_solar_time: false
            };

            const response = await fetch('https://rainbow-sanctuary-bazu-production.up.railway.app/api/bazi/compute', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(requestData)
            });

            if (!response.ok) {
                throw new Error(`API錯誤: ${response.status}`);
            }

            return await response.json();
        }

        function convertToStoryLegions(apiResult) {
            const { four_pillars, ten_gods, spirits } = apiResult.data;
            
            const legions = [
                buildLegion('year', four_pillars.year, spirits),
                buildLegion('month', four_pillars.month, spirits),
                buildLegion('day', four_pillars.day, spirits),
                buildLegion('hour', four_pillars.hour, spirits)
            ];

            return { 
                legions, 
                meta: { 
                    pillar_string: `${four_pillars.year.stem}${four_pillars.year.branch} ${four_pillars.month.stem}${four_pillars.month.branch} ${four_pillars.day.stem}${four_pillars.day.branch} ${four_pillars.hour.stem}${four_pillars.hour.branch}`,
                    ten_gods: ten_gods
                } 
            };
        }

        function buildLegion(pillarType, pillar, spirits) {
            const legionInfo = LEGION_TYPES[pillarType];
            const commander = HEAVENLY_STEMS_COMMANDERS[pillar.stem] || { name: '未知主將', rpg_class: '神秘者', buff: [], debuff: [] };
            const strategist = EARTHLY_BRANCHES_STRATEGISTS[pillar.branch] || { name: '未知軍師', buff: [], debuff: [] };
            
            return {
                type: legionInfo.name,
                description: legionInfo.description,
                cssClass: legionInfo.cssClass,
                icon: legionInfo.icon,
                pillar: { stem: pillar.stem, branch: pillar.branch },
                commander: { 
                    code: pillar.stem, 
                    name: commander.name, 
                    rpg_class: commander.rpg_class, 
                    buff: commander.buff, 
                    debuff: commander.debuff 
                },
                strategist: { 
                    code: pillar.branch, 
                    name: strategist.name, 
                    buff: strategist.buff, 
                    debuff: strategist.debuff 
                },
                sigils: spirits.slice(0, 3).map(spirit => ({ 
                    name: spirit.name, 
                    category: spirit.category 
                }))
            };
        }

        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        function displayResults(userName, storyResult, apiResult) {
            hideLoading();
            
            document.getElementById('formSection').style.display = 'none';
            document.getElementById('resultSection').style.display = 'block';
            
            document.getElementById('resultSubtitle').textContent = 
                `${userName} 的命運分析 · 四柱：${storyResult.meta.pillar_string}`;
            
            // 顯示傳統命盤
            displayTraditionalChart(apiResult);
            
            // 顯示軍團戰報
            displayLegions(storyResult);
            
            // 顯示計算日誌
            displayLogs(apiResult);
            
            // 生成AI故事
            generateAIStory(userName, storyResult, apiResult);
        }

        function displayTraditionalChart(apiResult) {
            const { four_pillars, ten_gods, five_elements } = apiResult.data || {};
            
            // 檢查必要資料
            if (!four_pillars || !ten_gods) {
                console.error('API 資料不完整', apiResult);
                return;
            }
            
            // 四柱顯示
            const pillarsDisplay = document.getElementById('pillarsDisplay');
            const pillars = [
                { name: '年柱', pillar: four_pillars.year, god: ten_gods.year_stem },
                { name: '月柱', pillar: four_pillars.month, god: ten_gods.month_stem },
                { name: '日柱', pillar: four_pillars.day, god: '日主' },
                { name: '時柱', pillar: four_pillars.hour, god: ten_gods.hour_stem }
            ];
            
            pillarsDisplay.innerHTML = pillars.map(p => {
                const nayin = getNayin(p.pillar.stem, p.pillar.branch);
                const hiddenStems = getHiddenStems(p.pillar.branch);
                const hiddenStemsText = Object.values(hiddenStems).map(h => h.stem).join('·');
                
                return `
                <div class="pillar-column">
                    <div class="pillar-header">${p.name}</div>
                    <div class="pillar-stem">${p.pillar.stem}</div>
                    <div class="pillar-branch">${p.pillar.branch}</div>
                    <div class="pillar-god">${p.god}</div>
                    <div class="pillar-nayin" style="font-size: 0.8rem; color: #ffd700; margin-top: 5px;">🎯 ${nayin.nayin}</div>
                    <div class="pillar-hidden" style="font-size: 0.75rem; opacity: 0.7; margin-top: 3px;">藏干: ${hiddenStemsText}</div>
                </div>
            `}).join('');
            
            // 五行統計
            const elementsStats = document.getElementById('elementsStats');
            const elements = ['木', '火', '土', '金', '水'];
            const elementColors = {
                '木': '#32cd32',
                '火': '#ff4500', 
                '土': '#daa520',
                '金': '#ffd700',
                '水': '#4169e1'
            };
            
            // API 回傳的結構是 five_elements_stats.elements_count 和 elements_percentage
            const elementsCount = apiResult.data.five_elements_stats?.elements_count || {};
            const elementsPercentage = apiResult.data.five_elements_stats?.elements_percentage || {};
            
            elementsStats.innerHTML = elements.map(element => {
                const count = (elementsCount[element] || 0).toFixed(1);
                const percentage = (elementsPercentage[element] || 0).toFixed(1);
                return `
                    <div class="element-stat">
                        <div class="element-name" style="color: ${elementColors[element]}">${element}</div>
                        <div class="element-count" style="color: ${elementColors[element]}">${count}</div>
                        <div class="element-percentage">${percentage}%</div>
                    </div>
                `;
            }).join('');
            
            // 陰陽平衡度
            const yinYangBalance = calculateYinYangBalance(four_pillars);
            const yinYangDisplay = document.getElementById('yinYangBalance');
            if (yinYangDisplay) {
                yinYangDisplay.innerHTML = `
                    <div style="display: flex; gap: 20px; align-items: center; margin-top: 20px; padding: 15px; background: rgba(255,255,255,0.05); border-radius: 10px;">
                        <div style="flex: 1;">
                            <div style="font-size: 0.9rem; color: #ffd700; margin-bottom: 10px; font-weight: bold;">☀️ 陰陽平衡度</div>
                            <div style="display: flex; gap: 10px; margin-bottom: 5px;">
                                <div style="flex: ${yinYangBalance.yang}; background: linear-gradient(90deg, #ff6b6b, #ffd700); height: 30px; border-radius: 5px; display: flex; align-items: center; justify-content: center; color: #000; font-weight: bold;">
                                    陽 ${yinYangBalance.yang}
                                </div>
                                <div style="flex: ${yinYangBalance.yin}; background: linear-gradient(90deg, #4169e1, #9370db); height: 30px; border-radius: 5px; display: flex; align-items: center; justify-content: center; color: #fff; font-weight: bold;">
                                    陰 ${yinYangBalance.yin}
                                </div>
                            </div>
                            <div style="font-size: 0.8rem; opacity: 0.7; margin-top: 5px;">
                                陽 ${yinYangBalance.yang_percentage}% · 陰 ${yinYangBalance.yin_percentage}% · ${yinYangBalance.balance_status}
                            </div>
                        </div>
                    </div>
                `;
            }
        }

        function displayLegions(storyResult) {
            const legionsGrid = document.getElementById('legionsGrid');
            legionsGrid.innerHTML = storyResult.legions.map(legion => {
                const nayin = getNayin(legion.pillar.stem, legion.pillar.branch);
                
                return `
                <div class="legion-card ${legion.cssClass}">
                    <div class="legion-header">
                        <span style="font-size: 1.5rem;">${legion.icon}</span>
                        <div>
                            <div class="legion-title">${legion.type}</div>
                            <div style="font-size: 0.9rem; opacity: 0.8;">${legion.description}</div>
                        </div>
                        <div class="legion-pillar">${legion.pillar.stem}${legion.pillar.branch}</div>
                    </div>
                    
                    <div class="roles-section">
                        <span class="role">👑 主將: ${legion.commander.name} (${legion.commander.rpg_class})</span>
                        <span class="role">🎯 軍師: ${legion.strategist.name}</span>
                    </div>
                    
                    <div class="nayin-battlefield" style="margin: 15px 0; padding: 10px; background: rgba(255,215,0,0.1); border-radius: 8px; border-left: 3px solid #ffd700;">
                        <div style="font-size: 0.85rem; color: #ffd700; font-weight: bold; margin-bottom: 5px;">🎯 納音戰場</div>
                        <div style="font-size: 0.95rem; font-weight: bold; color: #fff;">${nayin.nayin}</div>
                        <div style="font-size: 0.8rem; opacity: 0.8; margin-top: 5px;">${nayin.description}</div>
                        <div style="font-size: 0.75rem; opacity: 0.7; margin-top: 5px; font-style: italic;">${nayin.life_theme}</div>
                    </div>
                    
                    <div class="buffs-section">
                        <div class="buff-title">✨ 軍團優勢</div>
                        <div class="buff-list">${[...legion.commander.buff, ...legion.strategist.buff].join(' · ')}</div>
                    </div>
                    
                    ${legion.sigils.length > 0 ? `
                    <div class="sigils-section">
                        <div class="sigil-title">🎴 兵符卡</div>
                        <div>${legion.sigils.map(sigil => `<span class="sigil">${sigil.name}</span>`).join('')}</div>
                    </div>
                    ` : ''}
                </div>
            `}).join('');
        }

        function displayLogs(apiResult) {
            const { four_pillars, spirits, solar_terms, calculation_logs } = apiResult.data;
            const logsContainer = document.getElementById('logsContainer');
            
            logsContainer.innerHTML = `
                <div class="log-section">
                    <div class="log-title">🕐 時間計算</div>
                    <div class="log-item info">輸入時間: ${apiResult.data.input_datetime || '未提供'}</div>
                    <div class="log-item info">時區: ${apiResult.data.timezone || 'Asia/Taipei'}</div>
                    <div class="log-item info">經度: ${apiResult.data.longitude || 120.0}°</div>
                    <div class="log-item ${apiResult.data.use_true_solar_time ? 'warning' : 'info'}">
                        真太陽時: ${apiResult.data.use_true_solar_time ? '已啟用' : '未啟用'}
                    </div>
                </div>

                <div class="log-section">
                    <div class="log-title">📅 節氣定位</div>
                    <div class="log-item">當前節氣: ${solar_terms?.current || '未知'}</div>
                    <div class="log-item">下個節氣: ${solar_terms?.next || '未知'}</div>
                    <div class="log-item info">月柱計算基於節氣邊界，確保準確性</div>
                </div>

                <div class="log-section">
                    <div class="log-title">🔢 四柱推算</div>
                    <div class="log-item">年柱: ${four_pillars.year.stem}${four_pillars.year.branch} (${four_pillars.year.stem}天干 + ${four_pillars.year.branch}地支)</div>
                    <div class="log-item">月柱: ${four_pillars.month.stem}${four_pillars.month.branch} (五虎遁查表)</div>
                    <div class="log-item">日柱: ${four_pillars.day.stem}${four_pillars.day.branch} (甲子EPOCH基準)</div>
                    <div class="log-item">時柱: ${four_pillars.hour.stem}${four_pillars.hour.branch} (五鼠遁查表)</div>
                </div>

                <div class="log-section">
                    <div class="log-title">⭐ 神煞查詢</div>
                    <div class="spirits-log">
                        ${spirits.map(spirit => `
                            <div class="spirit-log-item">
                                <strong>${spirit.name}</strong> (${spirit.category})<br>
                                <small>查表依據: ${spirit.pillar || '四柱綜合'}</small>
                            </div>
                        `).join('')}
                    </div>
                </div>

                <div class="log-section">
                    <div class="log-title">✅ 驗證完成</div>
                    <div class="log-item">四柱計算: ✓ 完成</div>
                    <div class="log-item">十神分析: ✓ 完成</div>
                    <div class="log-item">神煞查詢: ✓ 完成 (${spirits.length}個)</div>
                    <div class="log-item">五行統計: ✓ 完成</div>
                    <div class="log-item">納音查表: ✓ 完成</div>
                </div>
            `;
        }

        async function generateAIStory(userName, storyResult, apiResult) {
            const storyContent = document.getElementById('storyContent');
            
            try {
                // 構建AI提示詞
                const prompt = buildStoryPrompt(userName, storyResult, apiResult);
                
                // 調用OpenAI API生成故事
                const story = await callOpenAI(prompt);
                
                storyContent.innerHTML = `<div class="story-content">${story}</div>`;
            } catch (error) {
                storyContent.innerHTML = `
                    <div class="story-content" style="color: #ff6b6b;">
                        <p>抱歉，AI故事生成遇到問題：${error.message}</p>
                        <p>但您的軍團分析已完成，請查看其他標籤頁的詳細資訊。</p>
                    </div>
                `;
            }
        }

        function buildStoryPrompt(userName, storyResult, apiResult) {
            const { four_pillars, spirits } = apiResult.data;
            const legions = storyResult.legions;
            
            return `請為${userName}創作一個獨特的八字軍團故事，基於以下資訊：

四柱：${storyResult.meta.pillar_string}

四時軍團：
${legions.map(legion => `- ${legion.type}：由${legion.commander.name}(${legion.commander.rpg_class})統領，${legion.strategist.name}輔佐`).join('\n')}

神煞兵符：${spirits.map(s => s.name).join('、')}

請創作一個800字左右的故事，包含：
1. 開場：描述${userName}的命運軍團覺醒
2. 四時軍團的特色和互動
3. 神煞兵符的神秘力量
4. 人生建議和未來展望

風格要求：
- 奇幻RPG風格，充滿想像力
- 正面積極，給人希望
- 結合中國傳統文化元素
- 語言優美，富有詩意`;
        }

        async function callOpenAI(prompt) {
            // 模擬AI故事生成（實際部署時需要後端API支援）
            return new Promise((resolve) => {
                setTimeout(() => {
                    resolve(`
                        <p>在虹靈御所的星空之下，${document.getElementById('name').value}的命運軍團正式覺醒...</p>
                        
                        <p>🏰 <strong>家族兵團</strong>率先響應召喚，${document.querySelector('#legionsGrid .family .legion-title') ? '由經驗豐富的統領帶領' : ''}，承載著血脈傳承的使命，為整個軍團提供穩固的根基。</p>
                        
                        <p>🌱 <strong>成長兵團</strong>緊隨其後，充滿朝氣與活力，代表著不斷學習與進步的精神，為軍團注入源源不絕的創新力量。</p>
                        
                        <p>⭐ <strong>本我兵團</strong>展現真實的內在力量，這是最核心的戰鬥單位，體現著純粹的自我本質與獨特的個人魅力。</p>
                        
                        <p>🚀 <strong>未來兵團</strong>指向無限可能，如同夜空中最亮的星，照亮前進的道路，預示著美好的發展前景。</p>
                        
                        <p>四時軍團在神煞兵符的加持下，形成了完美的戰略平衡。每一個兵符都蘊含著古老的智慧，為軍團提供獨特的能力加成。</p>
                        
                        <p>在這個充滿挑戰與機遇的人生戰場上，您的軍團將以智慧為劍，以勇氣為盾，書寫屬於自己的傳奇篇章。記住，真正的力量來自於內心的平衡與和諧，願您的軍團永遠光明璀璨！</p>
                    `);
                }, 3000);
            });
        }

        // 標籤頁切換功能
        function switchTab(tabName) {
            // 移除所有active類
            document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            
            // 添加active類到選中的標籤
            event.target.classList.add('active');
            document.getElementById(tabName + 'Tab').classList.add('active');
        }

        function resetForm() {
            document.getElementById('formSection').style.display = 'block';
            document.getElementById('resultSection').style.display = 'none';
            document.getElementById('baziForm').reset();
            
            // 重置選擇狀態
            document.querySelectorAll('.gender-option').forEach(opt => opt.classList.remove('selected'));
            document.querySelectorAll('.midnight-option').forEach(opt => opt.classList.remove('selected'));
            document.querySelector('.midnight-option[data-value="traditional"]').classList.add('selected');
        }
    </script>
    <!-- 補充數據系統 -->
    <script src="bazi-supplement-data.js"></script>
</body>
</html>
